<?rev
put gBASEPATH into gBASEPATH

if gBASEPATH is "gBASEPATH" then
	put "No direct script access allowed."
	exit to top
end if


------------------------------------------------------------------------
-- revIgniter Input Library Extensions
--
-- A collection of useful functions that extend the Native Input
-- Library of revIgniter
--
-- @package         revIgniter
-- @subpackage      Libraries
-- @category        Libraries
-- @author          Bob Hall
-- @copyright	     Copyright (c) 2016, Robert D. Hall
-- @license         https://github.com/bhall2001/revigniter-restserver/blob/master/LICENSE
-- @link            https://github.com/bhall2001/revigniter-restserver
-- @version         0.0.1
------------------------------------------------------------------------

------------------------------------------------------------------------
-- Get the Request Headers
--
-- param	   bool	pXssClean	Whether to apply XSS filtering
--
-- return	array of the HTTP Headers
------------------------------------------------------------------------
local sREQUEST_HEADERS

function rigRequestHeaders pXssClean
	rigLogMessage "debug", "In rigRequestHeaders"
	
	put "" into sREQUEST_HEADERS
	
    if pXSSclean is empty then
       put FALSE into tXSSclean
    else
       put pXSSclean into tXSSclean
    end if

    // If header is already defined, return it immediately
    if sREQUEST_HEADERS is an array then return sREQUEST_HEADERS

    //$this->headers['Content-Type'] = isset($_SERVER['CONTENT_TYPE']) ? $_SERVER['CONTENT_TYPE'] : @getenv('CONTENT_TYPE');
    if sContentType is not empty then
       put sContentType into sREQUEST_HEADERS["Content-Type"]
    else
       put $_SERVER["CONTENT_TYPE"] into sREQUEST_HEADERS["Content-Type"]
    end if


    /*foreach ($_SERVER as $key => $val)
    {
    if (sscanf($key, 'HTTP_%s', $header) === 1)
    {
    // take SOME_HEADER and turn it into Some-Header
    $header = str_replace('_', ' ', strtolower($header));
    $header = str_replace(' ', '-', ucwords($header));

    $this->headers[$header] = $this->_fetch_from_array($_SERVER, $key, $xss_clean);
    }
    }
    */

    repeat for each key aKey in $_SERVER
       if "HTTP_" is in aKey then
          put _rigFetchFromArray($_SERVER, aKey, tXssClean) into tData
			 
			 // take SOME_HEADER and turn it into Some-Header
			 put replaceText(aKey, "_", " " ) into tKey
			 put ucWords(tKey) into tKey
			 put replaceText(tKey, " ", "-") into tKey
			 put tData into sREQUEST_HEADERS[tKey]
			 
			 --rigLogMessage "debug", tKey & ":" & sREQUEST_HEADERS[tKey]
       end if
    end repeat

    //return $this->headers;
    return sREQUEST_HEADERS
	 
 end rigRequestHeaders
 
 ------------------------------------------------------------------------
 --
 -- Converts string of words to have uppercase first letter only
 ------------------------------------------------------------------------

 function ucWords pData
 	-- convert the entire string to lower case
 	put toLower(pData) into tData
	
	-- for each word, capitalize the first letter
	repeat for each word aWord in tData
		put toUpper(char 1 of aWord) into char 1 of aWord
		put aWord & " " after myResult
	end repeat
	
	-- now delete the last space
	delete char -1 of myResult
	
	-- return the result
	return myResult
 end ucWords




 ----------------------------------------------------------------------
 --| FUNCTION rigVarHttp
 --|
 --| Author: Bob Hall
 --| Version:  1.0
 --| Created: 2016-DEC-11
 --| Last Mod: 2016-DEC-11
 --| Requires: _rigFetchFromArray()
 --|
 --| Summary: Fetch an item from either the SERVER array.
 --| 
 --| Format:  rigVarHttp(param1, param2)
 --|
 --| Parameters: string <pIndex>, bool <pXSSclean>
 --|
 --| Return: string
 ----------------------------------------------------------------------

 function rigVarHttp pIndex pXSSclean
 	if pXSSclean is empty then
 		put FALSE into tXSSclean
 	else
 		put pXSSclean into tXSSclean
 	end if
	
	if sREQUEST_HEADERS is not an array then
		rigRequestHeaders
	end if

 	return _rigFetchFromArray(sREQUEST_HEADERS, pIndex, tXSSclean)
 end rigVarHttp


------------------------------------------------------------------------
--    THIS SHOULD EVENTUALLY MOVED TO COMMONS.LC
------------------------------------------------------------------------


------------------------------------------------------------------------
-- Is HTTPS?
--
-- Determines if the application is accessed via an encrypted
-- (HTTPS) connection.
--
-- return	boolean
------------------------------------------------------------------------
 function _rigIsHttps

    if ($_SERVER["HTTPS"] is not empty) and (toLower($_SERVER["HTTPS"] is not "off")) then
       return true
    else if (toLower($_SERVER["HTTP_X_FORWARDED_PROTO"]) is "https") then
       return true
    else if ($_SERVER["HTTP_FRONT_END_HTTPS"] is not empty) and (toLower($_SERVER["HTTP_FRONT_END_HTTPS"]) is not "off") then
       return true
    end if

    return false

 end _rigIsHttps
